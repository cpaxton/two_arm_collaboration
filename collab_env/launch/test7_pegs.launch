<launch>

  <arg name="gui" default="false" doc="(bool) Launch the gazebo GUI"/>
  <arg name="hand" default="true" doc="(bool) Launch the robot with a hand"/>
  <arg name="usetwo" default="true" doc="(bool) Use two WAM arms instead of one"/>
  <arg name="log_level" default="1" doc="(int) orocos log level"/>
  <arg name="debug" default="false" doc="(bool) in debug mode"/>
  <arg name="rviz" default="true" doc="(bool) run rviz"/>
  <arg name="rviz_config" default="$(find lcsr_collab)/config/tf_peg1.rviz" doc="(string) rviz config file for user interface"/>
  <arg name="rqt_barrett_arm1" default="false"/>
  <arg name="rqt_barrett_arm2" default="false"/>
  <arg name="run_script_arm1" default="true"/>
  <arg name="run_script_arm2" default="true"/>
  <arg name="planning_arm1" default="false" doc="(bool) Launch the motion planing pipeline"/>
  <arg name="planning_arm2" default="false" doc="(bool) Launch the motion planing pipeline"/>

  <!-- spawn peg 1 -->
  <param name="peg1_description"
    command="$(find xacro)/xacro.py '$(find lcsr_collab)/objects/peg.urdf.xacro' name:=peg1 xx:=0.75 yy:=0.75"
    />
  <node name="$(anon urdf_spawner)" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
    args=" -urdf -model peg1 -param peg1_description"/>
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="peg1_st_pub" >
    <remap from="robot_description" to="peg1_description" />
  </node>
  <!--<node pkg="joint_state_publisher" type="joint_state_publisher" name="peg1_js_pub" >
    <remap from="robot_description" to="peg1_description" />
  </node>-->

  <!-- spawn peg 2 -->
  <param name="peg2_description"
    command="$(find xacro)/xacro.py '$(find lcsr_collab)/objects/peg.urdf.xacro' name:=peg2 xx:=0.75 yy:=-0.75"
    />
  <node name="$(anon urdf_spawner)" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
    args=" -urdf -model peg2 -param peg2_description"/>
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="peg2_st_pub" >
    <remap from="robot_description" to="peg2_description" />
  </node>
  <!--<node pkg="joint_state_publisher" type="joint_state_publisher" name="peg2_js_pub" >
    <remap from="robot_description" to="peg2_description" />
  </node>-->

  <!-- spawn ring 1 -->
  <param name="ring1_description"
    command="$(find xacro)/xacro.py '$(find lcsr_collab)/objects/ring.urdf.xacro' name:=ring1"/>
  <param name="ring1_description_semantic"
    command="$(find xacro)/xacro.py '$(find lcsr_collab)/objects/ring.srdf.xacro' name:=ring1"/>
  <!--
    command="$(find xacro)/xacro.py '$(find lcsr_collab)/objects/ring.urdf.xacro' name:=ring1 xx:=0.75 yy:=0.75 zz:=0.25"/>
  -->
  <!--<node name="peg1_start_pub" pkg="tf" type="static_transform_publisher" args="0.75 0.75 0.75 0 0 0 /world /peg1_start 100"/>-->
  <node name="$(anon urdf_spawner)" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args=" -urdf -model ring1 -param ring1_description -x 0.75 -y 0.75 -z 0.25"/>
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="ring1_st_pub" >
    <remap from="robot_description" to="ring1_description" />
  </node>
  <!--<node pkg="joint_state_publisher" type="joint_state_publisher" name="ring1_js_pub" >
    <remap from="robot_description" to="ring1_description" />
    <remap from="/joint_states" to="/ring/joint_states" />
  </node>-->

  <!-- load the WAM arm settings, space nav controller, and user interface -->
  <include file="$(find lcsr_collab)/launch/test7.launch">
    <arg name="gui" value="$(arg gui)" />
    <arg name="hand" value="$(arg hand)" />
    <arg name="log_level" value="$(arg log_level)" />
    <arg name="debug" value="$(arg debug)"/>
    <arg name="rviz" value="$(arg rviz)" />
    <arg name="rviz_config" value="$(arg rviz_config)" />
    <arg name="usetwo" value="$(arg usetwo)" />
    <arg name="rqt_barrett_arm1" value="$(arg rqt_barrett_arm1)" />
    <arg name="rqt_barrett_arm2" value="$(arg rqt_barrett_arm2)" />
    <arg name="run_script_arm1" value="$(arg run_script_arm1)" />
    <arg name="run_script_arm2" value="$(arg run_script_arm2)" />
    <arg name="planning_arm1" value="$(arg planning_arm1)"/>
    <arg name="planning_arm2" value="$(arg planning_arm2)"/>
  </include>

</launch>
