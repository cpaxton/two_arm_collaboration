<launch>

  <arg name="gui" default="false" doc="(bool) Launch the gazebo GUI"/>
  <arg name="hand" default="true" doc="(bool) Launch the robot with a hand"/>
  <arg name="usetwo" default="true" doc="(bool) Use two WAM arms instead of one"/>
  <arg name="log_level" default="1" doc="(int) orocos log level"/>
  <arg name="debug" default="false" doc="(bool) in debug mode"/>
  <arg name="rviz" default="true" doc="(bool) run rviz"/>
  <arg name="rviz_config" default="$(find peg_assist_demo)/config/peg1.rviz" doc="(string) rviz config file for user interface"/>
  <arg name="rqt_barrett_arm1" default="false" doc="(bool) show rqt barrett UI for user-controlled arm" />
  <arg name="rqt_barrett_arm2" default="false" doc="(bool) show rqt barrett UI for algorithm-controlled arm" />

  <!-- load the WAM arm settings, space nav controller, and user interface -->
  <include file="$(find collab_spacenav)/launch/spacenav_rostopics.launch">
    <arg name="usetwo" value="false"/>
  </include>
  <include file="$(find collab_env)/launch/test7_pegs.launch">
    <arg name="gui" value="$(arg gui)" />
    <arg name="hand" value="$(arg hand)" />
    <arg name="log_level" value="$(arg log_level)" />
    <arg name="debug" value="$(arg debug)"/>
    <arg name="rviz" value="false" />
    <arg name="rviz_config" value="$(arg rviz_config)" />
    <arg name="usetwo" value="$(arg usetwo)" />
    <arg name="rqt_barrett_arm1" value="$(arg rqt_barrett_arm1)" />
    <arg name="rqt_barrett_arm2" value="$(arg rqt_barrett_arm2)" />
    <arg name="planning_arm2" value="true" /> <!-- start MoveIt for the second arm -->
    <arg name="run_script_arm2" value="false" />
  </include>

  <node name="arm2_joint_script_runner"
    pkg="collab_collab"
    type="run_controllers.py"
    args="/gazebo/wam2__deployer__ $(find collab_env)/sim/enable/arm2_enable_joint.ops"
    output="screen"/>

  <!-- =================================================================================
                        Launch Task Management Stuff
       ================================================================================= -->


  <!-- node for moving ring to destination peg -->
  <node name="move_ring_motion"
    pkg="dmp_action"
    type="dmp_motion_server.py" />

  <!-- node for reaching towards ring -->
  <node name="reach_ring_motion"
    pkg="dmp_action"
    type="dmp_motion_server.py" />

  <!-- wait for the ring to be in range with this action -->
  <node name="wait_for_ring"
    pkg="peg_assist_demo"
    type="WaitForRing.py" />

  <!-- startup script to make sure the arms are running the right controllers -->
  <node name="peg_demo_startup"
    pkg="peg_assist_demo"
    type="startup.py" />

  <!-- node for running the plan -->
  <node name="execution_task" pkg="peg_assist_demo" type="task.py" output="screen">
    <param name="move_ring_file" value="($find peg_assist_demo)/data/move_ring.yaml"/>
    <param name="grab_ring_file" value="($find peg_assist_demo)/data/grab_ring.yaml"/>
  </node>

  <!-- service node for controlling the robot arm, interfaces with MoveIt and orocos -->
  <node name="Arm2Commander" pkg="peg_assist_demo" type="ArmCommander.py">
    <param name="hand_topic" value="/gazebo/w2barrett_manager/hand/cmd"/>
  </node>

  <!-- view execution progress -->
  <node name="smach_viewer"
    pkg="smach_viewer"
    type="smach_viewer.py" />


  <!-- =================================================================================
                        Launch Predicator
       ================================================================================= -->

  <!-- touching, etc. -->
  <include file="$(find predicator_collision)/launch/pegs_interaction_predicates_test.launch">
    <arg name="output" value="log"/>
  </include>

  <!-- left, right, up, down, etc. -->
  <include file="$(find predicator_geometry)/launch/pegs_geometry_predicates_test.launch">
    <arg name="output" value="log"/>
  </include>

  <include file="$(find predicator_fake_classification)/launch/pegs_classification_predicates_test.launch">
    <arg name="output" value="log"/>
  </include>

  <include file="$(find predicator_movement)/launch/pegs_movement_predicates_test.launch">
    <arg name="output" value="log"/>
  </include>



  <!-- predicator core: test to determine if something has happened -->
  <node name="predicator_core" pkg="predicator_core" type="core.py"/>

  <!-- =================================================================================
                        Launch Visualization
       ================================================================================= -->

  <!-- NOTE: this section is based on barrett_wam_moveit_config/launch/moveit_rviz.launch -->
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

  <!--
  <arg name="config" default="false" />
  <arg unless="$(arg config)" name="command_args" value="" />
  <arg     if="$(arg config)" name="command_args" value="-d $(find barrett_wam_moveit_config)/launch/moveit.rviz" />
  -->

  <!-- launch rviz with remapping for the moveit display -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_config)" launch-prefix="$(arg launch_prefix)" >
    <remap from="/get_planning_scene" to="/gazebo/w2barrett_manager/get_planning_scene"/>  
    <rosparam command="load" file="$(find barrett_wam_moveit_config)/config/kinematics.yaml"/>
    <remap from="/move_group" to="/gazebo/w2barrett_manager/move_group"/>
  </node>

</launch>
