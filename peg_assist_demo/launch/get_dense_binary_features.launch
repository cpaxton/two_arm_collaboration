<launch>
  <arg name="output" default="screen"/>
  <arg name="id"/>


  <node name="get_dense_binary_features_node"
    type="get_dense_binary_features.py"
    pkg="peg_assist_demo"
    output="$(arg output)">

    <param name="bagfile" value="$(find peg_assist_demo)/trials/trial$(arg id).bag"/>

    <rosparam param="geometry_frames">
      - ring1/ring_link
      - peg1/peg_top_link
      - peg2/peg_top_link
      - wam/wrist_palm_link
      - wam2/wrist_palm_link
      - stage_link
      - location1
      - location2
      - peg1_standby_location
      - drop_ring_location
    </rosparam>

    <rosparam param="geometry_reference_frames">
      - stage_link
    </rosparam>

    <rosparam param="movement_frames">
      - ring1/ring_link
      - peg1/base_link
      - peg2/base_link
      - wam/wrist_palm_link
      - wam2/wrist_palm_link
    </rosparam>

    <rosparam param="collision_from">
      - ring1/ring_link
    </rosparam>

    <rosparam param="collision_to">
      - peg1/base_link
      - peg2/base_link
      - wam/hand/finger_1/med_link
      - wam/hand/finger_2/med_link
      - wam/hand/finger_3/med_link
      - wam2/hand/finger_1/med_link
      - wam2/hand/finger_2/med_link
      - wam2/hand/finger_3/med_link
      - peg1/peg_link
      - peg2/peg_link
    </rosparam>

    <rosparam param="joints_params">
      - wam
      - wam2
    </rosparam>

    <rosparam param="predicates">
      movement2: ['approaching', 'moving_relative_to', 'rotating_relative_to']
      movement1: ['moving', 'rotating']
      geometry3: ['left_of', 'right_of', 'up_from', 'down_from', 'in_front_of', 'in_back_of']
      geometry2: ['near_xy', 'near_xyz']
      collision: ['touching']
      joints: ['is_closed']
    </rosparam>
    <!--
      movement: ['approaching', 'departing', 'moving', 'rotating', 'moving_relative_to', 'rotating_relative_to']
    -->
    <!--
      geometry2: ['near_xy', 'near_xyz', 'higher_than', 'lower_than']
    -->

  </node>

</launch>
